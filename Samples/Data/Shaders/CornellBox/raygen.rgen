#version 460
#extension GL_EXT_ray_tracing : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;
layout(binding = 2, set = 0) uniform CameraProperties 
{
	vec3  cameraPos;
	vec3  forward;
	vec3  horizontal;
	vec3  up;
	float focale;
	float width;
	float height;
} cam;

struct RayPayload {
	vec3 color;
	int depth;
	bool missed;
};

layout(location = 0) rayPayloadEXT RayPayload hitValue;

void main() 
{
	const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
	const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
	vec2 d = inUV * 2.0 - 1.0;


	vec3 lower_left_corner =  cam.cameraPos - cam.horizontal/2 - cam.up/2 + cam.forward*cam.focale;

	vec3 rayDir = lower_left_corner + inUV.x*cam.horizontal + inUV.y*cam.up  -cam.cameraPos;
	float tmin = 0.001;
	float tmax = 10000.0;

    hitValue.color = vec3(0.0);
    hitValue.depth = 0;
    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xff, 0, 0, 0, cam.cameraPos.xyz, tmin, rayDir, tmax, 0);

    

	imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue.color,0.0));
}
